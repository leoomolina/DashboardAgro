// <auto-generated />
using System;
using DashboardAgro.Infraestructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DashboardAgro.Infraestructure.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250916171336_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DashboardAgro.Infraestructure.Tables.ControleImportacaoTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescricaoStatusImportacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ImportedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("QuantidadeRegistros")
                        .HasColumnType("int");

                    b.Property<int>("StatusImportacao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ControleImportacao", (string)null);
                });

            modelBuilder.Entity("DashboardAgro.Infraestructure.Tables.DadosLavouraPermanenteTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("Ano")
                        .HasColumnType("bigint");

                    b.Property<long>("AreaColhida")
                        .HasColumnType("bigint");

                    b.Property<long>("AreaDestinadaColheita")
                        .HasColumnType("bigint");

                    b.Property<int>("IdEstado")
                        .HasColumnType("int");

                    b.Property<int>("IdProducao")
                        .HasColumnType("int");

                    b.Property<int>("IdUf")
                        .HasColumnType("int");

                    b.Property<DateTime>("ImportedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("QuantidadeProduzida")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RendimentoMedioProducao")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorProducao")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdEstado");

                    b.HasIndex("IdProducao");

                    b.ToTable("DadosLavouraPermanente", (string)null);
                });

            modelBuilder.Entity("DashboardAgro.Infraestructure.Tables.DadosLavouraTemporariaTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("Ano")
                        .HasColumnType("bigint");

                    b.Property<long>("AreaColhida")
                        .HasColumnType("bigint");

                    b.Property<long>("AreaPlantada")
                        .HasColumnType("bigint");

                    b.Property<int>("IdEstado")
                        .HasColumnType("int");

                    b.Property<int>("IdProducao")
                        .HasColumnType("int");

                    b.Property<int>("IdUf")
                        .HasColumnType("int");

                    b.Property<DateTime>("ImportedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("QuantidadeProduzida")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RendimentoMedioProducao")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorProducao")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdEstado");

                    b.HasIndex("IdProducao");

                    b.ToTable("DadosLavouraTemporaria", (string)null);
                });

            modelBuilder.Entity("DashboardAgro.Infraestructure.Tables.ProducaoTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ImportedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TipoLavoura")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Producao", (string)null);
                });

            modelBuilder.Entity("DashboardAgro.Infraestructure.Tables.RegiaoTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ImportedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Municipio");
                });

            modelBuilder.Entity("DashboardAgro.Infraestructure.Tables.UFTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdRegiao")
                        .HasColumnType("int");

                    b.Property<DateTime>("ImportedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomeUF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SiglaUF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdRegiao");

                    b.ToTable("UnidadeFederativa", (string)null);
                });

            modelBuilder.Entity("DashboardAgro.Infraestructure.Tables.DadosLavouraPermanenteTable", b =>
                {
                    b.HasOne("DashboardAgro.Infraestructure.Tables.UFTable", "Uf")
                        .WithMany()
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DashboardAgro.Infraestructure.Tables.ProducaoTable", "Producao")
                        .WithMany()
                        .HasForeignKey("IdProducao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producao");

                    b.Navigation("Uf");
                });

            modelBuilder.Entity("DashboardAgro.Infraestructure.Tables.DadosLavouraTemporariaTable", b =>
                {
                    b.HasOne("DashboardAgro.Infraestructure.Tables.UFTable", "Uf")
                        .WithMany()
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DashboardAgro.Infraestructure.Tables.ProducaoTable", "Producao")
                        .WithMany()
                        .HasForeignKey("IdProducao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producao");

                    b.Navigation("Uf");
                });

            modelBuilder.Entity("DashboardAgro.Infraestructure.Tables.UFTable", b =>
                {
                    b.HasOne("DashboardAgro.Infraestructure.Tables.RegiaoTable", "Regiao")
                        .WithMany()
                        .HasForeignKey("IdRegiao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Regiao");
                });
#pragma warning restore 612, 618
        }
    }
}
